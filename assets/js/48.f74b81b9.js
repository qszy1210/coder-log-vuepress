(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{397:function(t,a,r){"use strict";r.r(a);var s=r(43),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"javacript中的进制标识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javacript中的进制标识"}},[t._v("#")]),t._v(" javacript中的进制标识")]),t._v(" "),r("p",[t._v("不仅仅是javascript 中的标志, 只是借javascript来说明一下这其中的关系;")]),t._v(" "),r("h2",{attrs:{id:"_0b-0x-0-分别表示二进制-16进制-8进制-当然十进制就是默认的-不添加前缀就标识10进制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0b-0x-0-分别表示二进制-16进制-8进制-当然十进制就是默认的-不添加前缀就标识10进制"}},[t._v("#")]),t._v(" 0b 0x 0  分别表示二进制, 16进制, 8进制, 当然十进制就是默认的,不添加前缀就标识10进制")]),t._v(" "),r("h2",{attrs:{id:"二进制-比如-0b111-表示-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二进制-比如-0b111-表示-7"}},[t._v("#")]),t._v(" 二进制, 比如 0b111 表示 7")]),t._v(" "),r("h2",{attrs:{id:"八进制-比如-011-表示-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八进制-比如-011-表示-9"}},[t._v("#")]),t._v(" 八进制, 比如 011 表示 9")]),t._v(" "),r("h2",{attrs:{id:"_16进制-比如-0x11-表示17"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16进制-比如-0x11-表示17"}},[t._v("#")]),t._v(" 16进制, 比如 0x11 表示17")]),t._v(" "),r("h1",{attrs:{id:"进制之间的转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进制之间的转换"}},[t._v("#")]),t._v(" 进制之间的转换")]),t._v(" "),r("p",[t._v("这几种进制之间是可以互相转换的, 默认的 JavaScript中的 toString  方法可以进行.\n例如:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('(011).toString(2) //"1001"\n')])])]),r("p",[t._v("不过默认的结果是数字, 如果是想转换为数字的话, 我目前没有找到具体的直接方法, 只能通过\n方法进行一些二次转换了.")]),t._v(" "),r("p",[t._v("比如, 二进制转换为八进制, 再次进行转换, 需要则呢家前缀, 告诉 Number 是什么类型的")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("(Number('0'+(011).toString(8))).toString(2)\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);