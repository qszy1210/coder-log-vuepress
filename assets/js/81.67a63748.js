(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{430:function(n,e,t){"use strict";t.r(e);var r=t(43),a=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("JavaScript 中的内置对象有如下:")]),n._v(" "),t("p",[t("code",[n._v("String Number Boolean Date Object Function RegExp Error Array Symbol")])]),n._v(" "),t("p",[n._v("以下的内置对象都可以使用 new 进行, 比如\n"),t("code",[n._v("new String()")]),n._v(" "),t("code",[n._v("new Object()")]),n._v("\n但很多情况下, 我们使用 "),t("code",[n._v("String()")]),n._v(" "),t("code",[n._v("Object()")]),n._v(" 也是可以的. 这两种情况下 用不用 new 是不是都一样呢")]),n._v(" "),t("p",[n._v("我特意尝试了一下, 在上边的列举中, 以下\n使用不使用 new 返回的结果都是一样的.\nObject\nArray\nFunction\nRegExp\nError")]),n._v(" "),t("p",[n._v("以下是不一样的\nString:\nnew String('a');//对象字符串\nString('a');//和直接写 'a' 是一样的, 但是如果是其他类型的话, 等于直接转换为字符串, 比如 String(2)")]),n._v(" "),t("p",[n._v("Number 同 String")]),n._v(" "),t("p",[n._v("Boolean 同 String")]),n._v(" "),t("p",[n._v("Date:\nnew Date();//返回一个对象类型的当前日期\nDate();//返回一个当前日期的字符串, 所以这里是相等的 new Date().toString() === Date()")]),n._v(" "),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[n._v("#")]),n._v(" 注意")]),n._v(" "),t("p",[n._v('注意一下这两个问题:\nString(undefined) 返回 "undefined" 的字符串\nString(null) 返回 "null" 的字符串\nObject(undefined) 或者 Object(null) 则返回空对象, 同 Object() 相同.\nString([null]) 返回的是空字符串 ""')])])}),[],!1,null,null,null);e.default=a.exports}}]);