(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{390:function(t,n,s){"use strict";s.r(n);var o=s(43),a=Object(o.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js-中的方法注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-中的方法注入"}},[t._v("#")]),t._v(" js 中的方法注入")]),t._v(" "),s("p",[t._v("java中很多框架支持 apo 的注入, js中也可以类似的进行实现")]),t._v(" "),s("p",[t._v("主要是通过扩展js中方法的"),s("strong",[t._v("老祖")]),t._v(" Function 对象来进行实现.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Function.prototype.after = function(foo) {\n    const thiz = this;\n    return function(...args) {\n         thiz.apply(thiz, args);\n         foo.apply(thiz, args);\n\n    }\n}\n\n//test\nfunction test(param) {\n    console.log("do");\n}\n\nfunction doAfter(param) {\n    console.log("doAfter");\n}\n\nconst doWithAfter = test.after(doAfter);\n\n\n\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);