(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{376:function(t,e,s){"use strict";s.r(e);var r=s(43),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"获取元素的实际样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取元素的实际样式"}},[t._v("#")]),t._v(" 获取元素的实际样式")]),t._v(" "),s("p",[t._v("主要采用 currentStyle (ie6 兼容), getComputedStyle, 以及 cssText 进行获取")]),t._v(" "),s("h3",{attrs:{id:"csstext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csstext"}},[t._v("#")]),t._v(" cssText")]),t._v(" "),s("p",[t._v("通过 getAttribute('style') 或者 .style 可以直接获取内联上设置的 css 属性, 但是无法获取\n"),s("code",[t._v("<style></style>")]),t._v(" 标签中的属性")]),t._v(" "),s("h3",{attrs:{id:"getcomputedstyle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getcomputedstyle"}},[t._v("#")]),t._v(" getComputedStyle")]),t._v(" "),s("p",[t._v("获取计算后的样式, 在 FF 或者现代浏览器有支持. 但是各个浏览器的解释有差别. 获取的具体内容可能会有差异\nwindow.getComputedStyle()")]),t._v(" "),s("h3",{attrs:{id:"currentstyle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#currentstyle"}},[t._v("#")]),t._v(" currentStyle")]),t._v(" "),s("p",[t._v("在 IE 浏览器中并没有 getComputedStyle , IE 提供了 currentStyle 属性进行获取.")])])}),[],!1,null,null,null);e.default=a.exports}}]);