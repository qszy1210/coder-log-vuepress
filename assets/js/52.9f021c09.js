(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{401:function(t,a,s){"use strict";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("正常的取反操作采用 ~ 就可以进行\n原来的一个误解: 如下")]),t._v(" "),s("blockquote",[s("p",[t._v("正常的取反操作, 应该采用 掩码 异或的方式进行,\n比如 取2的反, 应该用 3 ^ 2 进行 (3 是全1的操作)\n参考网址:\nhttps://segmentfault.com/q/1010000005697515")])]),t._v(" "),s("p",[t._v("实际上比如")]),t._v(" "),s("p",[t._v("2&(~2) // 结果为0, 如果按照我当初的理解, ~2为-3, 那么应该为 -11, 所以结果不会是0")]),t._v(" "),s("p",[t._v("实际上是0, 说明什么呢? 说明在计算机中的运算是正确的.")]),t._v(" "),s("p",[t._v("对于取反操作一直都是按照实际的存储进行的,\n在计算机中是按照补码的方式进行存放的.")]),t._v(" "),s("ol",[s("li",[t._v("整数的补码与原来的相同")]),t._v(" "),s("li",[t._v("负数的补码需要除符号位取反+1")])]),t._v(" "),s("p",[t._v("同理, 如果是一个实际的计算机中的二进制转换为我们的数据的话, 需要 -1, 然后取反.")]),t._v(" "),s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("h4",{attrs:{id:"_2的取反-not-反码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2的取反-not-反码"}},[t._v("#")]),t._v(" 2的取反(not 反码)")]),t._v(" "),s("p",[t._v("比如 2, 首先补码, 然后取反.(此时在计算机中就已经完成了, 但是为了按照10进制显示以及读取, 所以需要按照 -1, 取反的顺序进行处理)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//按照8位进行处理\n2 => 00000010 => 11111101\n  => 11111100(-1操作) => 10000011 (即 -3)\n所以 2 的取反直接展示上就是 -3, 但是在计算机中展示的就是 (11111101)\n")])])]),s("p",[t._v("如果 2 & (~2) 自然就是 0")]),t._v(" "),s("h4",{attrs:{id:"_2-的取反-not-反码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-的取反-not-反码"}},[t._v("#")]),t._v(" -2 的取反 (not 反码)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//按照8位进行处理, 首先负数在计算机中的存储是以反码的形式, 所以先处理为反码\n-2 => 10000010 => 11111101 => 11111110(+1)\n=>00000001(取反) => 1(转换为10进制)\n")])])]),s("p",[t._v("程序员从来不看比例, 只看有无")])])}),[],!1,null,null,null);a.default=n.exports}}]);