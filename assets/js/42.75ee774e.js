(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{391:function(e,t,a){"use strict";a.r(t);var n=a(43),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"数组去重的两个小技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组去重的两个小技巧"}},[e._v("#")]),e._v(" 数组去重的两个小技巧")]),e._v(" "),a("h2",{attrs:{id:"首先es6有提供了-set-对象-同java中的-set-set中的值不可以重复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首先es6有提供了-set-对象-同java中的-set-set中的值不可以重复"}},[e._v("#")]),e._v(" 首先es6有提供了 Set 对象, 同java中的 Set, set中的值不可以重复.")]),e._v(" "),a("p",[e._v("所以对于一个数组我们可以直接采用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const duplicateArr = [2,3,4,4,4,3];\nconst newArray = [...new Set(duplicateArr)];\nconsole.log(newArray);\n")])])]),a("h2",{attrs:{id:"可以采用filter函数进行过滤-查看index-是否跟当前的index一致-因为indexof返回的是第一个查找的位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可以采用filter函数进行过滤-查看index-是否跟当前的index一致-因为indexof返回的是第一个查找的位置"}},[e._v("#")]),e._v(" 可以采用filter函数进行过滤, 查看index 是否跟当前的index一致. 因为indexOf返回的是第一个查找的位置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const duplicateArr = [2,3,4,4,4,3];\nconst newArray = duplicateArr.filter((value,index,arr)=>{\n    return arr.indexOf(value) === index;\n    //或者\n    //return arr.findIndex(value) === index;\n})\nconsole.log(newArray);\n")])])]),a("h2",{attrs:{id:"可以采用object中的key值不重复的特性-这种方法比较一些简单数组-因为object-keys中的key默认都为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可以采用object中的key值不重复的特性-这种方法比较一些简单数组-因为object-keys中的key默认都为字符串"}},[e._v("#")]),e._v(" 可以采用Object中的key值不重复的特性, 这种方法比较一些简单数组, 因为Object.keys中的key默认都为字符串")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const duplicateArr = [2,3,4,4,4,3];\nconst newObject = {};\nfor(let i in duplicateArr) {\n    if (!newObject[duplicateArr[i]]){\n        newObject[duplicateArr[i]] = 1;//只是记录一下\n    }\n    else {\n    //这里也可以增加计数类的处理\n    }\n}\nconsole.log(Object.keys(newObject));\n\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);