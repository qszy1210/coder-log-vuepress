(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{406:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"位运算实现加减法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算实现加减法"}},[t._v("#")]),t._v(" 位运算实现加减法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先定义位运算加法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("解释一下, m & n 按位与, 只要有一个为0, 那么返回0, 否则返回1(即都是1的情况下)\nm ^ n , 按位异或, 如果对应位数相同的话, 返回0, 不同的话, 返回 1")]),t._v(" "),a("p",[t._v("按照上边的, 如果按照二进制进行加法计算, 比如 0b1101 + 0b1011\n如果两个位都是 1, 那么处理后的结果肯定是 0 (不考虑进位的情况);\n如果两个位一个是0, 一个是1, 那么结果肯定是 1;\n如果两个位都是0, 那么结果肯定是0;")]),t._v(" "),a("h2",{attrs:{id:"方法理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法理解"}},[t._v("#")]),t._v(" "),a("em",[t._v("方法理解:")])]),t._v(" "),a("p",[t._v("这个方法很好的实现了加法的含义:\n对于二进制来说, 表示数据的只有1, 0是占位用的.\n所以, 对于加法, 保存了1的信息(1的位置), 即表示了正确的数据.")]),t._v(" "),a("p",[t._v("两个数据相加, 相同的都是1的情况, 最后肯定是0(排除进位)\n一个是1的情况, 最后结果是1\n两个是0的情况, 最后结果是0\n即 异或的含义;")]),t._v(" "),a("p",[t._v("与操作加左移位,\n即进位的含义.")]),t._v(" "),a("p",[t._v("将加法解释为: "),a("strong",[t._v("不考虑进位的加法 + 进位信息")])]),t._v(" "),a("p",[t._v("反复循环到没有进位, 即 m = 0, 为止.")]),t._v(" "),a("h2",{attrs:{id:"详细过程解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#详细过程解释"}},[t._v("#")]),t._v(" 详细过程解释:")]),t._v(" "),a("p",[t._v("m & n 进行与操作, 然后左移 1 位, 然后赋值给 m")]),t._v(" "),a("p",[t._v("如上, 了解下 m & n")]),t._v(" "),a("blockquote",[a("p",[t._v("第几位,都是从 0 开始计算的 ~~~")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b1101")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b1011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"1001" 表示第0位和第3位要进位, 存储进位的情况')]),t._v("\n")])])]),a("p",[t._v("请首先执行以下的操作, 了解左移")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b1001")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"10010", 右边加0, 整体表现为左移一位')]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b1101")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b1011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "110", 表示如果没有进位的情况的结果(最后一位的计算结果)')]),t._v("\n")])])]),a("p",[t._v('从头开始来\n此时候 m, n 如下 0b1101 0b1011\n(0b1101 & 0b1011).toString(2) // "1001", 左移一位为 10010\n(0b1101 ^ 0b1011).toString(2) // "110"')]),t._v(" "),a("p",[t._v('此时候 m, n 如下 0b10010 0b110\n(0b10010 & 0b110).toString(2) // "10", 左移一位为 100\n(0b10010 ^ 0b110).toString(2) // "10100"')]),t._v(" "),a("p",[t._v('此时候 m, n 如下 0b100 0b10100\n(0b100 & 0b10100).toString(2) // "100", 左移一位为 1000\n(0b100 ^ 0b10100).toString(2) // "10000"')]),t._v(" "),a("p",[t._v('此时候 m, n 如下 0b1000 0b10000\n(0b1000 & 0b10000).toString(2) // "0", 左移一位为 0\n(0b1000 ^ 0b10000).toString(2) // "11000"')])])}),[],!1,null,null,null);s.default=r.exports}}]);